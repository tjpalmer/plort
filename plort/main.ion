import libc {printf}
import gl {...}
import sdl {...}

func main(argc: int, argv: char**): int {
    printf("Hello, world!\n");
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        printf("failed to init sdl: %s\n", SDL_GetError());
    }
    initGles3();
    window := SDL_CreateWindow(
        "Hello",
        SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED,
        800, 600,
        SDL_WINDOW_OPENGL | SDL_WINDOW_RESIZABLE
    );
    context := SDL_GL_CreateContext(window);
    if (!context) {
        printf("no context for us\n");
    }
    program := glCreateProgram();
    if (!program) {
        printf("no program for us\n");
    }
    // Seems like we need two paint calls starting out?
    paint(window);
    // Main loop.
    event: SDL_Event;
    done := false;
    dirty := true;
    while (!done) {
        if (dirty) {
            paint(window);
            dirty = false;
        }
        if (SDL_WaitEvent(&event)) {
            switch (event.type) {
            case SDL_QUIT:
                done = true;
            case SDL_WINDOWEVENT:
                switch (event.window.event) {
                case SDL_WINDOWEVENT_RESIZED:
                    dirty = true;
                    // printf("resize\n");
                }
            }
        }
        // TODO Timer?
    }
    SDL_GL_DeleteContext(context);
    SDL_DestroyWindow(window);
    SDL_Quit();
    printf("Goodbye, world!\n");
    return 0;
}

func initGles3() {
    // if (c.SDL_SetHint(c.SDL_HINT_OPENGL_ES_DRIVER, c"1") == 0) {
    //     warn("won't take a hint\n");
    //     return error.SdlError;
    // }
    if (SDL_GL_SetAttribute(
        SDL_GLattr(SDL_GL_CONTEXT_PROFILE_MASK),
        SDL_GL_CONTEXT_PROFILE_ES
    ) != 0) {
        // puts(c.SDL_GetError() ?? return error.SdlError);
        printf("failed to set gles\n");
    }
    if (SDL_GL_SetAttribute(
        // TODO Why doesn't GLES 2 work?
        SDL_GLattr(SDL_GL_CONTEXT_MAJOR_VERSION), 3
    ) != 0) {
        // puts(c.SDL_GetError() ?? return error.SdlError);
        printf("failed to set gles 2\n");
    }
    // ANGLE doesn't claim to support 3.1 yet on desktop gl, but asking for 3.0
    // here also fails for me at the moment, so just don't say.
    // if (c.SDL_GL_SetAttribute(
    //     c.SDL_GLattr(c.SDL_GL_CONTEXT_MINOR_VERSION), 1,
    // ) != 0) {
    //     // puts(c.SDL_GetError() ?? return error.SdlError);
    //     return error.SdlError;
    // }
}

func paint(window: SDL_Window*) {
    // printf("paint\n");
    glClearColor(0, 0, 0, 1);
    glClear(GL_COLOR_BUFFER_BIT);
    SDL_GL_SwapWindow(window);
}
